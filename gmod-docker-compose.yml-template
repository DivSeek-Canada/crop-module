# This is a DivSeek Canada customized version of the dockerized-gmod-deployment
# Docker Compose configuration to run a comprehensive GMOD tool platform
#
# This file is a template intended to be copied into an operational
# docker-compose.yml file, for crop-specific deployment customization.
# (NOTE: Please do NOT directly edit this file unless working on
#  modifications or extensions that add CORE functionality to the Portal
#  docker-compose build for all crop platforms being deployed.)
#
# (Meta)Data Persistence
# ======================
#
# NOTE: to allow the Tripal instance to store its (meta)data outside of its running containers,
# thus assuring persistence between container runs, this docker-compose.yml file configures
# a series of Docker 'named' "volumes". These are stored under the Docker installation directory.
#
# One can use the CLI command:
#
#         docker exec -i -t <container_name> /bin/bash
#
# to directly log into each container to access data attached to each volume.
#
# Later iterations of this project may add additional services to facilitate access to, and backup of, these volumes.
#
version: '3'

volumes:
  tripal_sites:
  tripal_private:
  galaxy:ro

services:

  proxy: ## Proxy Image
    image: nginx:latest
    ports:
        - "8200:80"
    links:
        - remoteuser
        - apollo
        - galaxy
        - tripal
        #- ngadmin
        - chado_jb
        - jbrowse
        - jbrowse-graphql
        - postgrest
        #- postgrest_tripal
        - postgraphql
        - pgadmin4
    volumes:
        # The DivSeek Canada Portal uses a slightly modified NGINX configuration
        - "./divseek-canada-nginx:/etc/nginx/conf.d"

  remoteuser: ## Remote User Proxy for Apollo (based on Galaxy Auth)
    image: "quay.io/erasche/gx-cookie-proxy:latest"
    environment:
      GALAXY_DB_URL: "postgresql://galaxy:galaxy@galaxy:5432/galaxy?client_encoding=utf8&sslmode=disable"
      GALAXY_SECRET: "0xdeadbeefcafe"
      GXC_BACKEND_URL: "target:8080"
      GXC_LOGLEVEL: DEBUG
    links:
      - galaxy:galaxy
      - apollo:target

  galaxy: ## Galaxy, yay!
    image: quay.io/galaxy-genome-annotation/docker-galaxy-annotation:master
    environment:
        NONUSE: nodejs,proftp,reports
        GALAXY_LOGGING: full
        GALAXY_CONFIG_BRAND: "GMOD"
        GALAXY_WEBAPOLLO_URL: "http://apollo:8080/apollo"
        GALAXY_WEBAPOLLO_EXT_URL: "/apollo"
        GALAXY_WEBAPOLLO_PASSWORD: "password"
        GALAXY_WEBAPOLLO_USER: admin@local.host
        GALAXY_SHARED_DIR: /apollo-data
        GALAXY_JBROWSE_SHARED_DIR: /jbrowse/data
        GALAXY_ID_SECRET: "0xdeadbeefcafe"
    volumes:
        - "./galaxy.ini:/etc/galaxy/galaxy.ini"

  apollo: ## Apollo, the genome annotation suite
    image: quay.io/erasche/apollo:remote_user
    links:
      - "apollo_db"
      - "tripal_db"
    environment:
      CONTEXT_PATH: "apollo"
      WEBAPOLLO_DB_USERNAME: postgres
      WEBAPOLLO_DB_PASSWORD: postgres
      WEBAPOLLO_DB_DRIVER: "org.postgresql.Driver"
      WEBAPOLLO_DB_DIALECT: "org.hibernate.dialect.PostgresPlusDialect"
      WEBAPOLLO_DB_URI: "jdbc:postgresql://apollo_db/postgres"
      WEBAPOLLO_CHADO_DB_USERNAME: postgres
      WEBAPOLLO_CHADO_DB_PASSWORD: postgres
      WEBAPOLLO_CHADO_DB_DRIVER: "org.postgresql.Driver"
      WEBAPOLLO_CHADO_DB_DIALECT: "org.hibernate.dialect.PostgresPlusDialect"
      WEBAPOLLO_CHADO_DB_URI: "jdbc:postgresql://tripal_db/postgres"
      # Optional, allow image to 'wait'
      WEBAPOLLO_DB_HOST: apollo_db
      WEBAPOLLO_DB_PORT: 5432
      WEBAPOLLO_DB_NAME: postgres
      WEBAPOLLO_CHADO_DB_HOST: tripal_db
      WEBAPOLLO_CHADO_DB_PORT: 5432
      WEBAPOLLO_CHADO_DB_NAME: postgres
      # Configure admin user email
      APOLLO_ADMIN_EMAIL: admin@divseekcanada.ca
    volumes:
        - "galaxy:ro"

  apollo_db: ## Apollo's Postgres DB
    image: postgres:9.5
    environment:
      POSTGRES_PASSWORD: postgres

  postgrest:
    image: quay.io/erasche/postgrest:latest
    links:
      - "tripal_db:db"
    environment:
      POSTGREST_JWT_SECRET: thisisnotarealsecret
      POSTGREST_SCHEMA: chado
      PG_PASSWORD: postgres
      PG_DB: postgres

  postgraphql: ## GraphQL interface to Postgres
    image: erasche/postgraphql:gmod-hacks
    environment:
        DB_GRAPHQL_PATH: "/graphql"
        DB_GRAPHIQL_PATH: "/graphiql"
        PG_SECRET: "deadbeefcafe"
        PGUSER: postgres
        PGPASSWORD: postgres
        PGHOST: tripal_db
        PGPORT: 5432
        PGDATABASE: postgres
        DB_SCHEMA: "public,chado"
    links:
        - "tripal_db"

  postgraphql-refseqs: ## PostGraphQL refseq server (required for JBrowse integration)
    build: ./docker-gmod/refseqs
    environment:
      PGUSER: postgres
      PGPASSWORD: postgres
      PGHOST: tripal_db
      PGPORT: 5432
      PGDATABASE: postgres
    links:
      - "tripal_db:db"

  pgadmin4: ## Postgres Admin Site
    image: thajeztah/pgadmin4
    ports:
        - 8201:5050
    links:
      - "apollo_db:apollo"
      - "tripal_db:tripal"
    volumes:
        - "./pgadmin4.db:/pgadmin/config/pgadmin4.db"

  #ngadmin:
    #image: quay.io/erasche/chado-angular-admin:latest
    #links:
      #- "postgrest"
      #- "postgrest_tripal"
    #ports:
      #- "8400:80"

  chado_jb:
    image: quay.io/erasche/chado-jbrowse-connector:latest
    environment:
      POSTGRES_PASSWORD: postgres
      SITE_PATH: "http://localhost:8200/jbrowse/"
      JBROWSE: "http://localhost:8200/jbrowse_actual/"
    links:
      - "tripal_db:db"

  tripal_db: ## Tripal's Postgres Database
    image: quay.io/galaxy-genome-annotation/chado:1.31-jenkins97-pg9.5
    environment:
      - POSTGRES_PASSWORD=postgres
        # The default chado image would try to install the schema on first run,
        # we just want the tools to be available.
      - INSTALL_CHADO_SCHEMA=0
      - INSTALL_YEAST_DATA=0
    volumes:
      - /var/lib/postgresql/data/

  tripal: ## Tripal
    # DivSeek Canada Portal builds a
    # derivative Docker Tripal image.
    # see project Dockerfile.
    build: .
    links:
      - tripal_db:postgres
      - elasticsearch:elasticsearch
    volumes:
      # External web site volume mappings
      - tripal_sites:/var/www/html/sites
      - tripal_private:/var/www/private
    environment:
      UPLOAD_LIMIT: 20M
      MEMORY_LIMIT: 128M
      # Development servers may run the system on "localhost" but
      # production platforms will be proxied through a proper hostname in BASE_URL,
      # likely using the  BASE_URL_PROTO: "https://"
      # BASE_URL: "https://gmod.divseekcanada.ca/tripal"
      # BASE_URL_PROTO: "https://"
      BASE_URL: "http://localhost:8200/tripal"
      BASE_URL_PROTO: "http://"
      BASE_URL_PATH: /tripal
      DB_NAME: 'postgres'
      SITE_NAME: "DivSeek Canada"
      ENABLE_CRON_JOBS: 1
      TRIPAL_DOWNLOAD_MODULES: "bootstrap jquery_update panels advanced_help"
      #
      # BrAPI module fails to install correctly as of commit 962ffe4 of the tripal/brapi project
      # TRIPAL_GIT_CLONE_MODULES: "https://github.com/tripal/tripal_jbrowse.git https://github.com/tripal/brapi"
      # TRIPAL_ENABLE_MODULES: "bootstrap jquery_update panels advanced_help tripal_jbrowse page_manager tracker forum brapi"
      #
      TRIPAL_GIT_CLONE_MODULES: "https://github.com/tripal/tripal_jbrowse.git"
      TRIPAL_ENABLE_MODULES: "bootstrap jquery_update panels advanced_help tripal_jbrowse page_manager tracker forum"
      THEME: "bootstrap"
    depends_on:
      - tripal_db
      - elasticsearch
      - jbrowse

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.1

  jbrowse:
    image: quay.io/galaxy-genome-annotation/jbrowse:v1.12.5
    volumes:
        - "galaxy:ro"

  jbrowse-graphql:
    image: quay.io/galaxy-genome-annotation/jbrowse:v1.12.5
    volumes:
        - "./docker-gmod/jbgraphql:/data"

